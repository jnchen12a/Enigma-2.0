# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'untitled.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from machine import Machine, InvalidCypherText, CharNotSupported, GoofyException
import modes


class Ui_Form(object):
    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.resize(1000, 576)
        self.widget = QtWidgets.QWidget(Form)
        self.widget.setGeometry(QtCore.QRect(9, 10, 981, 551))
        self.widget.setObjectName("widget")

        self.outerLayout = QtWidgets.QVBoxLayout(self.widget)
        self.outerLayout.setContentsMargins(0, 0, 0, 0)
        self.outerLayout.setObjectName("outerLayout")

        self.inputLayout = QtWidgets.QVBoxLayout()
        self.inputLayout.setObjectName("inputLayout")
        self.inputTextLabel = QtWidgets.QLabel(self.widget)
        self.inputTextLabel.setObjectName("inputTextLabel")
        self.inputLayout.addWidget(self.inputTextLabel)
        self.inputTextLayout = QtWidgets.QHBoxLayout()
        self.inputTextLayout.setObjectName("inputTextLayout")
        self.clearButton = QtWidgets.QPushButton(self.widget)
        self.clearButton.setObjectName("clearButton")
        self.clearButton.clicked.connect(self.clearButtonPressed)
        self.inputTextBox = QtWidgets.QTextEdit(self.widget)
        self.inputTextBox.setObjectName("inputTextBox")
        self.clearButtonLayout = QtWidgets.QHBoxLayout()
        self.clearButtonLayout.setObjectName("clearButtonLayout")
        spacerItem = QtWidgets.QSpacerItem(302, 42, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.clearButtonLayout.addItem(spacerItem)
        self.clearButtonLayout.addWidget(self.clearButton)
        self.inputTextLayout.addWidget(self.inputTextBox)
        self.inputLayout.addLayout(self.inputTextLayout)
        self.inputLayout.addLayout(self.clearButtonLayout)

        self.outerLayout.addLayout(self.inputLayout)
        self.outputLayout = QtWidgets.QVBoxLayout()
        self.outputLayout.setObjectName("outputLayout")
        self.outputTextLabel = QtWidgets.QLabel(self.widget)
        self.outputTextLabel.setObjectName("outputTextLabel")
        self.outputLayout.addWidget(self.outputTextLabel)
        self.outputTextLayout = QtWidgets.QHBoxLayout()
        self.outputTextLayout.setObjectName("outputTextLayout")
        self.outputTextBox = QtWidgets.QTextEdit(self.widget)
        self.outputTextBox.setObjectName("outputTextBox")
        self.outputTextLayout.addWidget(self.outputTextBox)
        self.outputLayout.addLayout(self.outputTextLayout)
        self.outerLayout.addLayout(self.outputLayout)

        self.buttonLayout = QtWidgets.QHBoxLayout()
        self.buttonLayout.setObjectName("buttonLayout")
        self.encodingModeLayout = QtWidgets.QVBoxLayout()
        self.encodingModeLayout.setObjectName("encodingModeLayout")
        self.encodingModeLabel = QtWidgets.QLabel(self.widget)
        self.encodingModeLabel.setObjectName("encodingModeLabel")
        self.encodingModeLayout.addWidget(self.encodingModeLabel)
        self.radioButtonLayout = QtWidgets.QHBoxLayout()
        self.radioButtonLayout.setObjectName("radioButtonLayout")
        self.normalRadioButton = QtWidgets.QRadioButton(self.widget)
        self.normalRadioButton.setObjectName("normalRadioButton")
        self.normalRadioButton.clicked.connect(self.setMode)
        self.radioButtonLayout.addWidget(self.normalRadioButton)
        self.goofyRadioButton = QtWidgets.QRadioButton(self.widget)
        self.goofyRadioButton.setObjectName("goofyRadioButton")
        self.goofyRadioButton.clicked.connect(self.setMode)
        self.radioButtonLayout.addWidget(self.goofyRadioButton)
        self.encodingModeLayout.addLayout(self.radioButtonLayout)
        self.buttonLayout.addLayout(self.encodingModeLayout)

        spacerItem = QtWidgets.QSpacerItem(302, 42, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.buttonLayout.addItem(spacerItem)
        self.submitButtonLayout = QtWidgets.QHBoxLayout()
        self.submitButtonLayout.setObjectName("submitButtonLayout")
        self.encodeButton = QtWidgets.QPushButton(self.widget)
        self.encodeButton.setObjectName("encodeButton")
        self.encodeButton.clicked.connect(self.pressEncode)
        self.submitButtonLayout.addWidget(self.encodeButton)
        self.decodeButton = QtWidgets.QPushButton(self.widget)
        self.decodeButton.setObjectName("decodeButton")
        self.decodeButton.clicked.connect(self.pressDecode)
        self.submitButtonLayout.addWidget(self.decodeButton)
        self.buttonLayout.addLayout(self.submitButtonLayout)
        self.outerLayout.addLayout(self.buttonLayout)

        self.retranslateUi(Form)
        QtCore.QMetaObject.connectSlotsByName(Form)

        try:
            self.machine = Machine(modes.NORMAL)
        except:
            self.showCriticalDialogue("The Machine's wheels have been tampered with. Please check the Machine's integrity")
            quit()
        # set normal radio button to True, default setting
        self.normalRadioButton.setChecked(True)
        # disable typing in decode text box
        self.outputTextBox.setReadOnly(True)

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "Enigma 2.0"))
        self.inputTextLabel.setText(_translate("Form", "Input Text"))
        self.outputTextLabel.setText(_translate("Form", "Output Text"))
        self.encodingModeLabel.setText(_translate("Form", "Encoding Mode"))
        self.normalRadioButton.setText(_translate("Form", "Normal"))
        self.goofyRadioButton.setText(_translate("Form", "I\'m Feeling Goofy"))
        self.encodeButton.setText(_translate("Form", "Encode"))
        self.decodeButton.setText(_translate("Form", "Decode"))
        self.clearButton.setText(_translate("Form", "Clear Input and Output"))

    def setMode(self):
        if self.normalRadioButton.isChecked():
            self.machine.setMode(modes.NORMAL)
        elif self.goofyRadioButton.isChecked():
            self.machine.setMode(modes.GOOFY)
    
    def pressEncode(self):
        text = self.inputTextBox.toPlainText()
        if text == '':
            self.showCriticalDialogue("No text to encode!")
            return
        try:
            encoded = self.machine.encode(text)
        except GoofyException:
            self.showCriticalDialogue("Sorry, something went wrong while encoding. This specific text may not be supported.")
            return
        except CharNotSupported as e:
            self.showCriticalDialogue(f'Sorry, {e} is not a supported character.')
            return
        self.outputTextBox.setText(encoded)
        clipboard.setText(encoded)
        self.showInformationDialogue("Text has successfully been encoded. Result copied to clipboard.")

    def pressDecode(self):
        text = self.inputTextBox.toPlainText()
        if text == '':
            self.showCriticalDialogue("No text to decode!")
            return
        try:
            decoded = self.machine.decode(text)
        except InvalidCypherText:
            self.showCriticalDialogue("The input cyphertext is not valid and cannot be decoded. It may have been tampered with.")
            return
        except CharNotSupported as e:
            self.showCriticalDialogue(f'Sorry, {e} is not a supported character.')
            return
        self.outputTextBox.setText(decoded)
        clipboard.setText(decoded)
        self.showInformationDialogue("Text has successfully been decoded. Result copied to clipboard.")

    def clearButtonPressed(self):
        self.inputTextBox.clear()
        self.outputTextBox.clear()

    def showCriticalDialogue(self, text):
        QtWidgets.QMessageBox.critical(Form, "Error!", text)

    def showInformationDialogue(self, text):
        QtWidgets.QMessageBox.information(Form, "Info", text)


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Form = QtWidgets.QWidget()
    clipboard = app.clipboard()
    ui = Ui_Form()
    ui.setupUi(Form)
    Form.show()
    sys.exit(app.exec_())
